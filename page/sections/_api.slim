ruby:
  opts_core = [
    [:source            ,:undefined, 'string or array', 'Sprite source or array of file sources.'],
    [:width             ,:undefined, :number,   'Display width'],
    [:height            ,:undefined, :number,   'Display height'],

    [:frame             ,0,          :number,   'The number of the current frame to show.'],
    [:frames            ,0,          :number,   'Total number of frames inside the spritesheet or the source array.'],
    [:framesX,          :undefined,  :number,   'Number of frames in a row in sprite sheet'],

    [:module            ,'"360"',    :string,   'The display module to use. Default is "360"'],
    [:behavior          ,'"drag"',   :string,   'The input behavior. Default is "drag"'],
    [:renderer          ,'"image"',  :string,   'The render method to use. Default is "image". May be one of [image|canvas|background]'],

    [:frameTime         ,40,         :number,    'Time between updates during animation. Initial is 40 which is 25 frames per second'],
    [:animate           ,:true,      :bool,      'Starts the animation on startup or reload'],
    [:reverse           ,:false,     :bool,      'If true animation is played backward'],
    [:loop              ,:false,     :bool,      'If true animation is looped'],
    [:stopFrame         ,0,          :number,    'Stops the animation at this frame if loop is disabled'],

    [:wrap              ,:false,     :bool,      'Same as "loop" but for user interaction'],
    [:sense             ,1,          :number,    'Mouse sensitivity (used by behavior implementations)'],
    [:orientation       ,'"horizontal"',:string, 'Preferred interaction axis (used by behavior implementations)'],

    [:onInit            ,:undefined, :function,   'Occurs when plugin has been initialized, but before loading the source files'],
    [:onProgress        ,:undefined, :function,   'Occurs when any source file has been loaded'],
    [:onLoad            ,:undefined, :function,   'Occurs when all source files have been loaded'],
    [:onFrame           ,:undefined, :function,   'Occurs when the frame number has been updated (e.g. during animation)'],
    [:onDraw            ,:undefined, :function,   'Occurs when all update is complete and frame can be drawn']
  ]

section#options
  h1 Options
  hr

  section
    p
      | There are many options that can be used to initialize the plugin. Most of them are described below. However,
        it is recommended to take a look at the examples where the options are described with more detail.

    - opts_core.each do |row|
      p
        strong
          = row[0]
          '  :
        em= row[2]
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;
        = row[3]

    p
      | To update some options on a running instance of the plugin, just reinitialize the plugin with the new options object.
    pre.prettyprint.linenums
      | // change the source file on an already initialized plugin
        $("#mySpriteSpin").spritespin({
          source      : "sprites/other_spritesheet.jpg",
        });

section#api-methods
  h1 jQuery API
  hr
  p
    | The following helper methods are available on a SpriteSpin instance.

h4 Animate
pre.prettyprint.linenums
  |
      $("#mySpriteSpin").spritespin("animate" [, play:boolean] [, loop:boolean])

h6 Examples
pre.prettyprint.linenums
  |
      // Get a value indicating whether the animation is running or not.
      $("#mySpriteSpin").spritespin("animate")

      // Start the animation if its not running.
      $("#mySpriteSpin").spritespin("animate", true)

      // Stop the animation if its already running.
      $("#mySpriteSpin").spritespin("animate", false)

      // Toggle the animation.
      $("#mySpriteSpin").spritespin("animate", "toggle")

      // Start the animation if its not already running and keep it looping.
      $("#mySpriteSpin").spritespin("animate", true, true)

      // Start the animation if its not already running and play it only once.
      $("#mySpriteSpin").spritespin("animate", true, false)


h4 Loop
pre.prettyprint.linenums
  |
      $("#mySpriteSpin").spritespin("loop" [, do_loop:boolean])

h6 Examples
pre.prettyprint.linenums
  |
      // Get a value indicating whether the animation is looped or not.
      $("#mySpriteSpin").spritespin("loop")

      // Set the loop option to true. If <em>animation</em> option is also true, the animation will be started.
      $("#mySpriteSpin").spritespin("loop", true)

      // Set the loop option to false. Current animation will be stopped at the end of loop.
      $("#mySpriteSpin").spritespin("loop", false)

h4 Frame
pre.prettyprint.linenums
  |
      $("#mySpriteSpin").spritespin("frame" [, value:number])

h6 Examples
pre.prettyprint.linenums
  |
      // Get the current frame number
      $("#mySpriteSpin").spritespin("frame")

      // Update the current frame number to 10.
      $("#mySpriteSpin").spritespin("frame", 10)

section#data-object
  h1 Data Object
  hr
  p
    | You can manipulate the state of SpriteSpin by setting values directly to its data object. This way you can implement
      advanced behavior.

pre.prettyprint.linenums
  |
      var data = $("#mySpriteSpin").data("spritespin");
